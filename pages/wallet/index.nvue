<template>
	<view class="main">
		<view>
			<view class="qiun-charts">
			  <!--#ifdef MP-ALIPAY -->
			  <canvas canvas-id="canvasColumn" id="canvasColumn" class="charts" :width="cWidth*pixelRatio" :height="cHeight*pixelRatio" :style="{'width':cWidth+'px','height':cHeight+'px'}" @touchstart="touchIt($event,'canvasColumn')"></canvas>
			  <!--#endif-->
			  <!--#ifndef MP-ALIPAY -->
			  <canvas canvas-id="canvasColumn" id="canvasColumn" class="charts" @touchstart="touchIt($event,'canvasColumn')"></canvas>
			  <!--#endif-->
			</view>
		</view>
		<view class="order-title">
			<text class="order-title-label" @click="handleOrder">我的订单</text>
			<uni-icons type="arrowright" color="#ffffff" size="15" />
		</view>
		<view class="tab">
			<view class="tab-item tab-item-on">
				买入
			</view>
			<view class="tab-item">
				卖出
			</view>
		</view> 
		<view class="list">
			<view class="list-item">
				<view class="list-item-label">
					<view class="top">
						<text class="text">数量：</text>
						88.000 ETV
					</view>
					<view class="bottom">
						<text class="text">数量：</text>
						88.000 ETV
					</view>
				</view>
				<view class="list-item-value">
					23.89
					<text class="text">USDK</text>
				</view>
			</view>
			<view class="list-item">
				<view class="list-item-label">
					<view class="top">
						<text class="text">数量：</text>
						88.000 ETV
					</view>
					<view class="bottom">
						<text class="text">数量：</text>
						88.000 ETV
					</view>
				</view>
				<view class="list-item-value">
					23.89
					<text class="text">USDK</text>
				</view>
			</view>
		</view> 
	</view>
</template>

<script>
	import uCharts from '../../components/u-charts/u-charts.js';
	var _self;
	var canvasObj = {};

	export default {
		data() {
			return {
				cWidth: '',
				cHeight: '',
				cWidth2: '', //横屏图表
				cHeight2: '', //横屏图表
				cWidth3: '', //圆弧进度图
				cHeight3: '', //圆弧进度图
				arcbarWidth: '', //圆弧进度图，进度条宽度,此设置可使各端宽度一致
				gaugeWidth: '', //仪表盘宽度,此设置可使各端宽度一致
				tips: '',
				pixelRatio: 1,
				serverData: '',
				itemCount: 30, //x轴单屏数据密度
				sliderMax: 50
			}
		},
		onLoad() {
			_self = this;
			//#ifdef MP-ALIPAY
			uni.getSystemInfo({
				success: function(res) {
					if (res.pixelRatio > 1) {
						//正常这里给2就行，如果pixelRatio=3性能会降低一点
						//_self.pixelRatio =res.pixelRatio;
						_self.pixelRatio = 2;
					}
				}
			});
			//#endif
			this.cWidth = uni.upx2px(740);
			this.cHeight = uni.upx2px(340);
			this.cWidth2 = uni.upx2px(700);
			this.cHeight2 = uni.upx2px(1100);
			this.cWidth3 = uni.upx2px(250);
			this.cHeight3 = uni.upx2px(250);
			this.arcbarWidth = uni.upx2px(24);
			this.gaugeWidth = uni.upx2px(30);

			//this.fillData(Data);
		},
		onReady() {
			this.getServerData();
		},
		methods: {
			getServerData() {
				uni.showLoading({
					title: "正在加载数据..."
				})
				uni.request({
					url: 'https://unidemo.dcloud.net.cn/hello-uniapp-ucharts-data.json',
					data: {},
					success: function(res) {
						_self.fillData(res.data);
					},
					fail: () => {
						_self.tips = "网络错误，小程序端请检查合法域名";
					},
					complete() {
						uni.hideLoading();
					}
				});
			},
			fillData(data) {
				this.serverData = data;
				this.tips = data.tips;
				this.sliderMax = data.Candle.categories.length;
				let Column = {
					categories: [],
					series: []
				};
				let ColumnMeter = {
					categories: [],
					series: []
				};
				let LineA = {
					categories: [],
					series: []
				};
				let LineB = {
					categories: [],
					series: []
				};
				let Area = {
					categories: [],
					series: []
				};
				let Pie = {
					series: []
				};
				let Ring = {
					series: []
				};
				let Funnel = {
					series: []
				};
				let Radar = {
					categories: [],
					series: []
				};
				let Arcbar1 = {
					series: []
				};
				let Arcbar2 = {
					series: []
				};
				let Arcbar3 = {
					series: []
				};
				let Gauge = {
					categories: [],
					series: []
				};
				let Candle = {
					categories: [],
					series: []
				};
				let Mix = {
					categories: [],
					series: []
				};
				//这里我后台返回的是数组，所以用等于，如果您后台返回的是单条数据，需要push进去
				Column.categories = data.Column.categories;
				//这里的series数据是后台做好的，如果您的数据没有和前面我注释掉的格式一样，请自行拼接数据
				Column.series = data.Column.series;
				ColumnMeter.categories = data.ColumnMeter.categories;
				//这里的series数据,如果为Meter，series[0]定义为外层数据，series[1]定义为内层数据
				ColumnMeter.series = data.ColumnMeter.series;
				LineA.categories = data.LineA.categories;
				LineA.series = data.LineA.series;
				LineB.categories = data.LineB.categories;
				LineB.series = data.LineB.series;
				Area.categories = data.Area.categories;
				Area.series = data.Area.series;
				Pie.series = data.Pie.series;
				Ring.series = data.Ring.series;
				Funnel.series = data.Pie.series;
				//自定义文案示例，需设置format字段
				for (let i = 0; i < Ring.series.length; i++) {
					Ring.series[i].format = () => {
						return Ring.series[i].name + Ring.series[i].data
					};
				}
				Radar.categories = data.Radar.categories;
				Radar.series = data.Radar.series;
				Arcbar1.series = data.Arcbar1.series;
				Arcbar2.series = data.Arcbar2.series;
				Arcbar3.series = data.Arcbar3.series;
				Gauge.categories = data.Gauge.categories;
				Gauge.series = data.Gauge.series;
				Candle.categories = data.Candle.categories;
				Candle.series = data.Candle.series;
				Mix.categories = data.Mix.categories;
				Mix.series = data.Mix.series;
				this.showColumn("canvasColumn", Column); 
			},
			showColumn(canvasId, chartData) {
				canvasObj[canvasId] = new uCharts({
					$this:_self,
					canvasId: canvasId,
					type: 'column',
					padding:[15,15,0,15],
					legend:{
						show:true,
						padding:5,
						lineHeight:11,
						margin:0,
					},
					fontSize:11,
					background:'#FFFFFF',
					pixelRatio:_self.pixelRatio,
					animation: false,
					categories: chartData.categories,
					series: chartData.series,
					xAxis: {
						disableGrid:true,
					},
					yAxis: {
						format:(val)=>{return val.toFixed(0)+'元'}
					},
					dataLabel: true,
					width: _self.cWidth*_self.pixelRatio,
					height: _self.cHeight*_self.pixelRatio,
					extra: {
						column: {
							type:'group',
							width: _self.cWidth*_self.pixelRatio*0.45/chartData.categories.length
						}
					  }
				});
			},
			touchCandle(e) {
				canvasObj['canvasCandle'].scrollStart(e);
			},
			moveCandle(e) {
				canvasObj['canvasCandle'].scroll(e);
			},
			touchEndCandle(e) {
				canvasObj['canvasCandle'].scrollEnd(e);
				//下面是toolTip事件，如果滚动后不需要显示，可不填写
				canvasObj['canvasCandle'].showToolTip(e, {
					format: function(item, category) {
						return category + ' ' + item.name + ':' + item.data
					}
				});
			},
			changeData() {
				canvasObj['canvasColumn'].updateData({
					series: _self.serverData.ColumnB.series,
					categories: _self.serverData.ColumnB.categories
				});
			},     
			touchIt(e,id) { 
				canvasObj[id].showToolTip(e, {
					format: function (item, category) {
						if(typeof item.data === 'object'){
							return category + ' ' + item.name + ':' + item.data.value 
						}else{
							return category + ' ' + item.name + ':' + item.data 
						}
					}
				});
			},
          touchPie(e,id) {
            canvasObj[id].showToolTip(e, {
                format: function(item) {
                    return item.name + ':' + item.data
                }
            });
          },
		  handleOrder() {
				uni.navigateTo({
					url: '/pages/user/order/index'
				})
			  
		  }
		}
	}
</script>

<style scoped>
	.main{
		height: 96vh;
		overflow: scroll;
		background: #000000;
	}
	uni-canvas{
		width: 100% !important;
	}
	.qiun-charts{
		padding: 14px 0px;
		background-color: rgba(255, 255, 255, 0.14)
	}
	.order-title{
		display: flex;
		color: #ffffff;
		padding: 15px;
		flex-direction: row;
	}
	.order-title-label{
		flex: 1;
	}
	.tab{
		display: flex;
		flex-direction: row;
		background-color: rgba(255, 255, 255, 0.14)
	}
	.tab-item{
		flex: 1;
		padding: 10px 20px;
		color: rgb(164, 168, 187);
		text-align: center;
	}
	.tab-item-on{
		color: #ffffff;
		background-color: rgba(255, 255, 255, 0.16)
	}
	.list{
		
	}
	.list-item{
		color: #ffffff;
		display: flex;
		padding: 15px 15px 15px 15px;
		flex-direction: row;
		border-bottom: 1px solid #0e0e0e;
	}
	.list-item-label{
		flex: 1;
	}
	.list-item-label .top{ 
		height: 24px;
		display: flex;
		flex-direction: row;
		font-size: 16px;
		align-items: baseline;
	}
	.list-item-label .bottom{
		height: 24px;
		color: #929292;
		display: flex;
		flex-direction: row;
		font-size: 16px;
		align-items: baseline;
	}
	.list-item-label .text{
		font-size: 12px; 
	}
	
	.list-item-value{
		color: #409EFF;
		display: flex;
		flex-direction: row;
		font-size: 16px;
		align-items: baseline;
		padding-top: 10px;
	}
	.list-item-value .text{
		color: #ffffff;
		margin-left: 4px;
		font-size: 12px;
	}
</style>
